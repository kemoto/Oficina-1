generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../src/database/database.db"
}

model Materia {
  id        Int      @id @default(autoincrement())
  nome      String
  turmas    Turma[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Escola {
  id        Int      @id @default(autoincrement())
  nome      String
  endereco  String
  contato   String
  turmas    Turma[]
  Aluno     Aluno[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Turma {
  id        Int          @id @default(autoincrement())
  ano       Int
  materia   Materia      @relation(fields: [materiaId], references: [id])
  materiaId Int
  escola    Escola       @relation(fields: [escolaId], references: [id])
  escolaId  Int
  alunos    TurmaAluno[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Aluno {
  id        Int          @id @default(autoincrement())
  nome      String
  escola    Escola       @relation(fields: [escolaId], references: [id])
  escolaId  Int
  notas     Nota[]
  turmas    TurmaAluno[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model TurmaAluno {
  id      Int    @id @default(autoincrement())
  aluno   Aluno  @relation(fields: [alunoId], references: [id])
  alunoId Int
  turma   Turma  @relation(fields: [turmaId], references: [id])
  turmaId Int
  notas   Nota[]

  @@unique([alunoId, turmaId])
}

model Nota {
  id           Int        @id @default(autoincrement())
  valor        Int
  bimestre     Int
  turmaAluno   TurmaAluno @relation(fields: [turmaAlunoId], references: [id])
  turmaAlunoId Int
  Aluno        Aluno?     @relation(fields: [alunoId], references: [id])
  alunoId      Int?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
